/*
 * This source file was generated by the Gradle 'init' task
 */
package org.example.app;

import java.io.IOException;
import java.net.URISyntaxException;
import java.nio.file.Files;
import java.nio.file.Paths;

import org.example.utilities.StringProcess;
import org.example.utilities.StringUtils;

import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.databind.ObjectMapper;

public class App {
    public static void main(String[] args) {

        // Start with a JSON string
        String jsonStr = readJSON();
        System.out.println("Input :: \n" + jsonStr);

        // form into a the object for the library
        StringProcess process = fromJsonString(jsonStr);

        // pass to the library to process
        process = StringUtils.process(process);

        // library has done the processing, return to a JSON string
        String updatedJsonStr = toJsonString(process);
        System.out.println("Output :: \n" + updatedJsonStr);

    }

    /**
     * Return a JSON string;' hardcoded here but could have been read from a file
     * or from another network API'
     */
    public static String readJSON() {

        try {
            var url = App.class.getClassLoader().getResource("data.json");
            var path = Paths.get(url.toURI());
            return Files.readString(path);
        } catch (IOException | URISyntaxException e) {
            throw new RuntimeException(e);
        }

    }

    public static StringProcess fromJsonString(String jsonStr) {
        ObjectMapper mapper = new ObjectMapper();
        try {
            return mapper.readValue(jsonStr, StringProcess.class);
        } catch (JsonProcessingException e) {
            throw new RuntimeException(e);
        }
    }

    public static String toJsonString(StringProcess result) {

        ObjectMapper mapper = new ObjectMapper();
        try {
            return mapper.writerWithDefaultPrettyPrinter().writeValueAsString(result);
        } catch (JsonProcessingException e) {
            throw new RuntimeException(e);
        }

    }
}
